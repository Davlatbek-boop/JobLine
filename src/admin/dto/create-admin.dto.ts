import { ApiProperty } from '@nestjs/swagger';
import {
  IsEmail,
  IsNotEmpty,
  IsOptional,
  IsPhoneNumber,
  IsString,
  IsBooleanString,
  MinLength,
} from 'class-validator';

export class CreateAdminDto {
  @ApiProperty({
    example: 1,
    description:
      'Unique identifier of the admin (auto-generated by the server)',
    readOnly: true,
  })
  id: number;

  @ApiProperty({
    example: 'Ali',
    description: 'First name of the admin',
  })
  @IsNotEmpty({ message: 'First name is required' })
  @IsString({ message: 'First name must be a string' })
  first_name: string;

  @ApiProperty({
    example: 'Valiyev',
    description: 'Last name of the admin',
  })
  @IsNotEmpty({ message: 'Last name is required' })
  @IsString({ message: 'Last name must be a string' })
  last_name: string;

  @ApiProperty({
    example: 'ali@example.com',
    description: 'Email address of the admin (must be unique)',
  })
  @IsNotEmpty({ message: 'Email is required' })
  @IsEmail({}, { message: 'Invalid email format' })
  email: string;

  @ApiProperty({
    example: 'StrongPassword123!',
    description: 'Password (must be at least 8 characters)',
  })
  @IsNotEmpty({ message: 'Password is required' })
  @IsString()
  @MinLength(8, { message: 'Password must be at least 8 characters long' })
  password: string;

  @ApiProperty({
    example: 'StrongPassword123!',
    description: 'Password confirmation',
  })
  @IsNotEmpty({ message: 'Password confirmation is required' })
  @IsString()
  confirm_password: string;

  @ApiProperty({
    example: 'true',
    description:
      'Indicates if the admin is a system creator ("true" / "false")',
  })
  @IsNotEmpty()
  @IsBooleanString({ message: 'Must be "true" or "false"' })
  is_creator: string;

  @ApiProperty({
    example: 'false',
    description: 'Indicates if the admin is active ("true" / "false")',
  })
  @IsNotEmpty()
  @IsBooleanString({ message: 'Must be "true" or "false"' })
  is_active: string;

  @ApiProperty({
    example: null,
    description: 'Hashed refresh token of the admin (generated by the server)',
    required: false,
    nullable: true,
  })
  @IsOptional()
  @IsString()
  hashed_refresh_token?: string;

  @ApiProperty({
    example: '+998901234567',
    description: 'Phone number of the admin (Uzbekistan format)',
  })
  @IsNotEmpty({ message: 'Phone number is required' })
  @IsPhoneNumber('UZ', { message: 'Invalid Uzbekistan phone number format' })
  phone: string;
}
